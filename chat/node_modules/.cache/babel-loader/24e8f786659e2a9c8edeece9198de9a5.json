{"ast":null,"code":"var _jsxFileName = \"/Users/tk/workspaces/personal/repos/frontend-challenges/chat/src/chat/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Socket from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = 'localhost:5000';\nexport const Chat = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const socket = Socket(SERVER_URL);\n  socket.on('message', msg => {\n    setMessages([...messages, msg]);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => setMessage(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => socket.emit('message', message),\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"msg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Chat, \"MvuPRYkeymQNTC/5QT+Oe0QVcbo=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","Socket","SERVER_URL","Chat","messages","setMessages","message","setMessage","socket","on","msg","event","target","value","emit","map"],"sources":["/Users/tk/workspaces/personal/repos/frontend-challenges/chat/src/chat/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Socket from 'socket.io-client';\n\nconst SERVER_URL = 'localhost:5000';\n\nexport const Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const socket = Socket(SERVER_URL);\n\n  socket.on('message', (msg) => {\n    setMessages([...messages, msg]);\n  });\n\n  return (\n    <>\n      <h1>Chat</h1>\n      <input onChange={(event) => setMessage(event.target.value)} />\n      <button onClick={() => socket.emit('message', message)}>Send</button>\n\n      <hr></hr>\n\n      <div>\n        {messages.map((msg) => (\n          <p>msg</p>\n        ))}\n      </div>\n    </>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,MAAMC,UAAU,GAAG,gBAAnB;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAMQ,MAAM,GAAGP,MAAM,CAACC,UAAD,CAArB;EAEAM,MAAM,CAACC,EAAP,CAAU,SAAV,EAAsBC,GAAD,IAAS;IAC5BL,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcM,GAAd,CAAD,CAAX;EACD,CAFD;EAIA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,QAAQ,EAAGC,KAAD,IAAWJ,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd;IAAtC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,MAAML,MAAM,CAACM,IAAP,CAAY,SAAZ,EAAuBR,OAAvB,CAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE;MAAA;MAAA;MAAA;IAAA,QALF,eAOE;MAAA,UACGF,QAAQ,CAACW,GAAT,CAAcL,GAAD,iBACZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAeD,CAxBM;;GAAMP,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}