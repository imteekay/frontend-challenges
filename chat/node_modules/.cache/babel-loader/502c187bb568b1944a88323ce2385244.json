{"ast":null,"code":"import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n\n  const type = encodedPacket.charAt(0);\n\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n\n  const packetType = PACKET_TYPES_REVERSE[type];\n\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n\n  return encodedPacket.length > 1 ? {\n    type: PACKET_TYPES_REVERSE[type],\n    data: encodedPacket.substring(1)\n  } : {\n    type: PACKET_TYPES_REVERSE[type]\n  };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (withNativeArrayBuffer) {\n    const decoded = decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return {\n      base64: true,\n      data\n    }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n\n    case \"arraybuffer\":\n    default:\n      return data;\n    // assuming the data is already an ArrayBuffer\n  }\n};\n\nexport default decodePacket;","map":{"version":3,"names":["ERROR_PACKET","PACKET_TYPES_REVERSE","decode","withNativeArrayBuffer","ArrayBuffer","decodePacket","encodedPacket","binaryType","type","data","mapBinary","charAt","decodeBase64Packet","substring","packetType","length","decoded","base64","Blob"],"sources":["/Users/tk/workspaces/personal/repos/frontend-challenges/chat/node_modules/engine.io-parser/build/esm/decodePacket.browser.js"],"sourcesContent":["import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,cAAnD;AACA,SAASC,MAAT,QAAuB,iCAAvB;AACA,MAAMC,qBAAqB,GAAG,OAAOC,WAAP,KAAuB,UAArD;;AACA,MAAMC,YAAY,GAAG,CAACC,aAAD,EAAgBC,UAAhB,KAA+B;EAChD,IAAI,OAAOD,aAAP,KAAyB,QAA7B,EAAuC;IACnC,OAAO;MACHE,IAAI,EAAE,SADH;MAEHC,IAAI,EAAEC,SAAS,CAACJ,aAAD,EAAgBC,UAAhB;IAFZ,CAAP;EAIH;;EACD,MAAMC,IAAI,GAAGF,aAAa,CAACK,MAAd,CAAqB,CAArB,CAAb;;EACA,IAAIH,IAAI,KAAK,GAAb,EAAkB;IACd,OAAO;MACHA,IAAI,EAAE,SADH;MAEHC,IAAI,EAAEG,kBAAkB,CAACN,aAAa,CAACO,SAAd,CAAwB,CAAxB,CAAD,EAA6BN,UAA7B;IAFrB,CAAP;EAIH;;EACD,MAAMO,UAAU,GAAGb,oBAAoB,CAACO,IAAD,CAAvC;;EACA,IAAI,CAACM,UAAL,EAAiB;IACb,OAAOd,YAAP;EACH;;EACD,OAAOM,aAAa,CAACS,MAAd,GAAuB,CAAvB,GACD;IACEP,IAAI,EAAEP,oBAAoB,CAACO,IAAD,CAD5B;IAEEC,IAAI,EAAEH,aAAa,CAACO,SAAd,CAAwB,CAAxB;EAFR,CADC,GAKD;IACEL,IAAI,EAAEP,oBAAoB,CAACO,IAAD;EAD5B,CALN;AAQH,CA1BD;;AA2BA,MAAMI,kBAAkB,GAAG,CAACH,IAAD,EAAOF,UAAP,KAAsB;EAC7C,IAAIJ,qBAAJ,EAA2B;IACvB,MAAMa,OAAO,GAAGd,MAAM,CAACO,IAAD,CAAtB;IACA,OAAOC,SAAS,CAACM,OAAD,EAAUT,UAAV,CAAhB;EACH,CAHD,MAIK;IACD,OAAO;MAAEU,MAAM,EAAE,IAAV;MAAgBR;IAAhB,CAAP,CADC,CAC8B;EAClC;AACJ,CARD;;AASA,MAAMC,SAAS,GAAG,CAACD,IAAD,EAAOF,UAAP,KAAsB;EACpC,QAAQA,UAAR;IACI,KAAK,MAAL;MACI,OAAOE,IAAI,YAAYL,WAAhB,GAA8B,IAAIc,IAAJ,CAAS,CAACT,IAAD,CAAT,CAA9B,GAAiDA,IAAxD;;IACJ,KAAK,aAAL;IACA;MACI,OAAOA,IAAP;IAAa;EALrB;AAOH,CARD;;AASA,eAAeJ,YAAf"},"metadata":{},"sourceType":"module"}